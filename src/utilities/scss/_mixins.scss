@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'sass:string';

$size--medium-viewport-start: 768px;
$size--large-viewport-start: 1100px;

@mixin disable-callout() {
  -webkit-tap-highlight-color: rgb(0 0 0 / 0%);
  -webkit-touch-callout: none;
  user-select: none;
}

@mixin reset-button() {
  @include disable-callout;
  all: unset;
  display: block;
  text-align: inherit;
  overflow: hidden;

  &:not([disabled]) {
    cursor: pointer;
  }
}

@mixin touch-overflow() {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
}

@mixin reset-input {
  all: unset;
  display: block;
  width: 100%;
}

@mixin _breakpoint($media-queries) {
  $query-list: ();
  $keys: map.keys($media-queries);
  $values: map.values($media-queries);

  @for $i from 1 through length($keys) {
    $string: '(' + list.nth($keys, $i) + ':' + list.nth($values, $i) + ')';

    @if length($query-list) != 0 {
      $string: 'and ' + $string;
    }

    $query-list: list.append($query-list, string.unquote($string));
  }

  @media #{$query-list} {
    @content;
  }
}

@mixin lightMode() {
  @include _breakpoint(
    (
      prefers-color-scheme: light,
    )
  ) {
    @content;
  }
}

@mixin darkMode() {
  @include _breakpoint(
    (
      prefers-color-scheme: dark,
    )
  ) {
    @content;
  }
}

@mixin small() {
  @include _breakpoint(
    (
      max-width: (
        $size--medium-viewport-start - 1px,
      ),
    )
  ) {
    @content;
  }
}

@mixin smallAndMedium() {
  @include _breakpoint(
    (
      max-width: (
        $size--large-viewport-start - 1px,
      ),
    )
  ) {
    @content;
  }
}

@mixin medium() {
  @include _breakpoint(
    (
      min-width: $size--medium-viewport-start,
      max-width: (
        $size--large-viewport-start - 1px,
      ),
    )
  ) {
    @content;
  }
}

@mixin mediumAndLarge() {
  @include _breakpoint(
    (
      min-width: $size--medium-viewport-start,
    )
  ) {
    @content;
  }
}

@mixin large() {
  @include _breakpoint(
    (
      min-width: $size--large-viewport-start,
    )
  ) {
    @content;
  }
}

// https://a11yproject.com/posts/how-to-hide-content/
// https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin visuallyHidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

@mixin ratioHeight($height-ratio: 1) {
  overflow: hidden;
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-bottom: math.percentage($height-ratio);
  }
}

@mixin inlineHeading() {
  float: left;

  &::after {
    content: '.\00a0';
  }
}
